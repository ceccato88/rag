#!/usr/bin/env python3
"""
Diagn√≥stico simplificado do sistema RAG
"""

def main():
    print("üè• DIAGN√ìSTICO DO SISTEMA RAG")
    print("=" * 40)
    
    # Teste 1: Depend√™ncias b√°sicas
    try:
        import os, sys
        from datetime import datetime
        print("‚úÖ Bibliotecas padr√£o: OK")
    except Exception as e:
        print(f"‚ùå Bibliotecas padr√£o: {e}")
        return
    
    # Teste 2: Depend√™ncias externas
    dependencias = ["openai", "voyageai", "astrapy", "pymupdf", "pydantic"]
    for dep in dependencias:
        try:
            __import__(dep)
            print(f"‚úÖ {dep}: Instalado")
        except ImportError:
            print(f"‚ùå {dep}: N√£o instalado")
    
    # Teste 3: Arquivos do projeto
    arquivos = ["config.py", "constants.py", "search.py", "indexer.py", ".env"]
    for arquivo in arquivos:
        if os.path.exists(arquivo):
            print(f"‚úÖ {arquivo}: Existe")
        else:
            print(f"‚ùå {arquivo}: N√£o encontrado")
    
    # Teste 4: Vari√°veis de ambiente
    env_vars = ["OPENAI_API_KEY", "VOYAGE_API_KEY", "ASTRA_DB_API_ENDPOINT", "ASTRA_DB_APPLICATION_TOKEN"]
    for var in env_vars:
        valor = os.getenv(var)
        if valor:
            print(f"‚úÖ {var}: Configurado")
        else:
            print(f"‚ùå {var}: N√£o configurado")
    
    # Teste 5: Configura√ß√£o do sistema
    try:
        from config import SystemConfig
        config = SystemConfig()
        validation = config.validate_all()
        if validation['valid']:
            print("‚úÖ Configura√ß√£o do sistema: V√°lida")
        else:
            print("‚ùå Configura√ß√£o do sistema: Problemas encontrados")
            for error in validation.get('errors', []):
                print(f"   ‚Ä¢ {error}")
    except Exception as e:
        print(f"‚ùå Configura√ß√£o do sistema: Erro ao carregar ({e})")
    
    # Teste 6: Importa√ß√£o do RAG
    try:
        from search import SimpleRAG
        print("‚úÖ Sistema RAG: M√≥dulos carregados")
    except Exception as e:
        print(f"‚ùå Sistema RAG: Erro ao carregar ({e})")
    
    print(f"\nüìã Diagn√≥stico conclu√≠do em {datetime.now()}")

if __name__ == "__main__":
    main()
