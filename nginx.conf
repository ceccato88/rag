# Configura√ß√£o Nginx para Load Balancing
# Sistema RAG Multi-Agente APIs

events {
    worker_connections 1024;
}

http {
    # Configura√ß√µes gerais
    include /etc/nginx/mime.types;
    default_type application/octet-stream;
    
    # Logs
    log_format main '$remote_addr - $remote_user [$time_local] "$request" '
                    '$status $body_bytes_sent "$http_referer" '
                    '"$http_user_agent" "$http_x_forwarded_for"';
    
    access_log /var/log/nginx/access.log main;
    error_log /var/log/nginx/error.log warn;
    
    # Performance
    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;
    keepalive_timeout 65;
    types_hash_max_size 2048;
    
    # Gzip compression
    gzip on;
    gzip_vary on;
    gzip_min_length 1024;
    gzip_proxied any;
    gzip_comp_level 6;
    gzip_types
        text/plain
        text/css
        text/xml
        text/javascript
        application/json
        application/javascript
        application/xml+rss
        application/atom+xml
        image/svg+xml;
    
    # Rate limiting
    limit_req_zone $binary_remote_addr zone=api:10m rate=10r/s;
    
    # Upstream servers
    upstream rag_simple {
        server rag-simple-api:8000;
    }
    
    upstream rag_multiagent {
        server rag-multiagent-api:8001;
    }
    
    # Servidor principal
    server {
        listen 80;
        server_name localhost;
        
        # Rate limiting
        limit_req zone=api burst=20 nodelay;
        
        # Headers de seguran√ßa
        add_header X-Frame-Options SAMEORIGIN;
        add_header X-Content-Type-Options nosniff;
        add_header X-XSS-Protection "1; mode=block";
        add_header Referrer-Policy "strict-origin-when-cross-origin";
        
        # CORS headers
        add_header Access-Control-Allow-Origin *;
        add_header Access-Control-Allow-Methods "GET, POST, OPTIONS";
        add_header Access-Control-Allow-Headers "Origin, X-Requested-With, Content-Type, Accept, Authorization";
        
        # Handle preflight requests
        if ($request_method = 'OPTIONS') {
            add_header Access-Control-Allow-Origin *;
            add_header Access-Control-Allow-Methods "GET, POST, OPTIONS";
            add_header Access-Control-Allow-Headers "Origin, X-Requested-With, Content-Type, Accept, Authorization";
            add_header Access-Control-Max-Age 1728000;
            add_header Content-Type 'text/plain charset=UTF-8';
            add_header Content-Length 0;
            return 204;
        }
        
        # P√°gina principal - dashboard
        location / {
            return 200 '
<!DOCTYPE html>
<html>
<head>
    <title>Sistema RAG Multi-Agente - APIs</title>
    <meta charset="utf-8">
    <style>
        body { font-family: Arial, sans-serif; margin: 40px; }
        .api-card { border: 1px solid #ddd; margin: 20px 0; padding: 20px; border-radius: 8px; }
        .status { padding: 4px 8px; border-radius: 4px; color: white; }
        .healthy { background-color: #28a745; }
        .unhealthy { background-color: #dc3545; }
        a { color: #007bff; text-decoration: none; }
        a:hover { text-decoration: underline; }
    </style>
</head>
<body>
    <h1>üöÄ Sistema RAG Multi-Agente - APIs de Produ√ß√£o</h1>
    
    <div class="api-card">
        <h2>üìä API RAG Simples</h2>
        <p><strong>Endpoint:</strong> /api/simple/</p>
        <p><strong>Descri√ß√£o:</strong> API para consultas RAG diretas com busca sem√¢ntica</p>
        <p><strong>Documenta√ß√£o:</strong> <a href="/api/simple/docs" target="_blank">Swagger UI</a></p>
        <p><strong>Health Check:</strong> <a href="/api/simple/health" target="_blank">/api/simple/health</a></p>
    </div>
    
    <div class="api-card">
        <h2>ü§ñ API Multi-Agente</h2>
        <p><strong>Endpoint:</strong> /api/multiagent/</p>
        <p><strong>Descri√ß√£o:</strong> API para consultas complexas com reasoning multi-agente</p>
        <p><strong>Documenta√ß√£o:</strong> <a href="/api/multiagent/docs" target="_blank">Swagger UI</a></p>
        <p><strong>Health Check:</strong> <a href="/api/multiagent/health" target="_blank">/api/multiagent/health</a></p>
    </div>
    
    <div class="api-card">
        <h2>üîß Recursos</h2>
        <ul>
            <li><a href="/metrics">M√©tricas do Sistema</a></li>
            <li><a href="/status">Status Geral</a></li>
        </ul>
    </div>
    
    <hr>
    <p><small>Sistema RAG Multi-Agente v1.0.0 - APIs de Produ√ß√£o</small></p>
</body>
</html>';
            add_header Content-Type text/html;
        }
        
        # API RAG Simples
        location /api/simple/ {
            rewrite ^/api/simple/(.*) /$1 break;
            proxy_pass http://rag_simple;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            # Timeout settings
            proxy_connect_timeout 30s;
            proxy_send_timeout 60s;
            proxy_read_timeout 300s;
        }
        
        # API Multi-Agente
        location /api/multiagent/ {
            rewrite ^/api/multiagent/(.*) /$1 break;
            proxy_pass http://rag_multiagent;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            # Timeout settings for longer processing
            proxy_connect_timeout 30s;
            proxy_send_timeout 120s;
            proxy_read_timeout 600s;
        }
        
        # WebSocket support for streaming
        location /api/multiagent/research/stream {
            rewrite ^/api/multiagent/(.*) /$1 break;
            proxy_pass http://rag_multiagent;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }
        
        # Status geral
        location /status {
            access_log off;
            return 200 "OK";
            add_header Content-Type text/plain;
        }
        
        # M√©tricas b√°sicas
        location /metrics {
            return 200 '
# HELP nginx_requests_total Total requests processed
# TYPE nginx_requests_total counter
nginx_requests_total{method="GET"} 0
nginx_requests_total{method="POST"} 0

# HELP nginx_connections_active Active connections
# TYPE nginx_connections_active gauge
nginx_connections_active 0
';
            add_header Content-Type text/plain;
        }
        
        # Health check combinado
        location /health {
            access_log off;
            proxy_pass http://rag_simple/health;
            proxy_connect_timeout 5s;
            proxy_send_timeout 5s;
            proxy_read_timeout 5s;
        }
    }
    
    # Servidor HTTPS (se SSL estiver configurado)
    # server {
    #     listen 443 ssl http2;
    #     server_name localhost;
    #     
    #     ssl_certificate /etc/nginx/ssl/cert.pem;
    #     ssl_certificate_key /etc/nginx/ssl/key.pem;
    #     ssl_protocols TLSv1.2 TLSv1.3;
    #     ssl_ciphers ECDHE-RSA-AES256-GCM-SHA512:DHE-RSA-AES256-GCM-SHA512:ECDHE-RSA-AES256-GCM-SHA384:DHE-RSA-AES256-GCM-SHA384;
    #     ssl_prefer_server_ciphers off;
    #     
    #     # Redirecionar todas as configura√ß√µes do servidor HTTP
    #     include /etc/nginx/conf.d/default.conf;
    # }
}