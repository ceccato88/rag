# Dockerfile para API RAG Simples Refatorada - Produção
FROM python:3.11-slim

# Metadados
LABEL maintainer="Sistema RAG Simples"
LABEL version="2.0.0"
LABEL description="API RAG Simples refatorada usando modelos nativos"

# Definir diretório de trabalho
WORKDIR /app

# Instalar dependências do sistema otimizadas para produção
RUN apt-get update && apt-get install -y --no-install-recommends \
    curl \
    gcc \
    g++ \
    && apt-get clean \
    && rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/*

# Copiar arquivos de requirements
COPY requirements.txt requirements-api.txt ./

# Instalar dependências Python
RUN pip install --no-cache-dir --upgrade pip \
    && pip install --no-cache-dir -r requirements.txt \
    && pip install --no-cache-dir -r requirements-api.txt

# Copiar apenas arquivos necessários para a API refatorada
COPY api_simple.py config.py constants.py search.py ./
COPY utils/ ./utils/
COPY maintenance/ ./maintenance/

# Criar usuário não-root para segurança
RUN groupadd -r appuser && useradd -r -g appuser -d /app -s /sbin/nologin appuser

# Criar diretórios necessários com permissões corretas
RUN mkdir -p logs temp images \
    && chown -R appuser:appuser /app

# Definir variáveis de ambiente para produção
ENV PYTHONPATH=/app
ENV PYTHONUNBUFFERED=1
ENV PYTHONDONTWRITEBYTECODE=1
ENV PIP_NO_CACHE_DIR=1
ENV PIP_DISABLE_PIP_VERSION_CHECK=1
ENV API_PORT=8001
ENV API_HOST=0.0.0.0
ENV API_WORKERS=2

# Expor porta (mudança para 8001 para diferenciação)
EXPOSE 8001

# Healthcheck otimizado para API refatorada
HEALTHCHECK --interval=30s --timeout=15s --start-period=45s --retries=3 \
  CMD curl -f http://localhost:8001/health || exit 1

# Mudar para usuário não-root
USER appuser

# Comando para executar a aplicação refatorada
CMD ["python", "-m", "uvicorn", "api_simple:app", "--host", "0.0.0.0", "--port", "8001", "--workers", "2", "--log-level", "info"]